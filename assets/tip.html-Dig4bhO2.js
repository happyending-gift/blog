import{_ as a,c as e,a as i,o as t}from"./app-BEy5D58p.js";const l={};function s(o,n){return t(),e("div",null,n[0]||(n[0]=[i('<h2 id="电脑用户变量和系统变量那个优先级高" tabindex="-1"><a class="header-anchor" href="#电脑用户变量和系统变量那个优先级高"><span>电脑用户变量和系统变量那个优先级高?</span></a></h2><p>当涉及到环境变量的解析和使用时，通常用户变量的优先级高于系统变量。</p><p>这意味着如果一个用户变量和一个系统变量具有相同的名称，那么在该用户的上下文中，用户变量的值将被优先使用。</p><h2 id="node跟npm指令有啥区别" tabindex="-1"><a class="header-anchor" href="#node跟npm指令有啥区别"><span>node跟npm指令有啥区别?</span></a></h2><p>node：用于运行 JavaScript 代码，是 Node.js 的执行环境。</p><p>npm：用于管理 Node.js 项目的依赖和包，是 Node.js 的包管理器。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Hykari对sharingspares比druid更适配</p></div><h2 id="anaconda-简介" tabindex="-1"><a class="header-anchor" href="#anaconda-简介"><span>Anaconda 简介</span></a></h2><p>Anaconda 是一个流行的 Python 数据科学平台，具有以下特点：</p><ul><li>具备跨平台管理包和环境的能力</li><li>支持在各个操作系统上安装、运行和更新软件包及其依赖</li><li>自身包含150+个高质量的第三方软件包</li><li>自带 Python 交互式开发环境 Jupyter Notebook</li></ul><h2 id="ddos-攻击-分布式拒绝服务攻击" tabindex="-1"><a class="header-anchor" href="#ddos-攻击-分布式拒绝服务攻击"><span>DDoS 攻击：分布式拒绝服务攻击</span></a></h2><p>DDoS（Distributed Denial of Service）攻击是一种通过多台服务器对目标服务器的某个接口进行大量访问，以消耗其资源并导致服务不可用的网络攻击。攻击可以发生在网络层、传输层和应用层。</p><h3 id="攻击方式" tabindex="-1"><a class="header-anchor" href="#攻击方式"><span>攻击方式</span></a></h3><ul><li><strong>TCP 洪水攻击</strong>：攻击方发送大量的连接请求，但源 IP 地址是伪造的。当服务器回复 ACK 报文后，攻击方不回复，导致服务器产生大量半连接状态的 TCP 请求，最终可能导致服务崩溃。</li><li><strong>应用层攻击</strong>：直接对服务器发送大量的 GET 请求，耗尽服务器资源。</li></ul><h3 id="防御措施" tabindex="-1"><a class="header-anchor" href="#防御措施"><span>防御措施</span></a></h3><ol><li><strong>合理使用黑名单和白名单</strong>：控制访问权限，减少恶意流量。</li><li><strong>使用分布式防御系统</strong>：分散攻击流量，提高防御能力。</li><li><strong>部署 CDN</strong>：通过内容分发网络缓解攻击压力，保护源服务器。</li></ol>',16)]))}const r=a(l,[["render",s]]),p=JSON.parse('{"path":"/js/tip.html","title":"小提示","lang":"zh-CN","frontmatter":{"title":"小提示","author":"chengp"},"headers":[{"level":2,"title":"电脑用户变量和系统变量那个优先级高?","slug":"电脑用户变量和系统变量那个优先级高","link":"#电脑用户变量和系统变量那个优先级高","children":[]},{"level":2,"title":"node跟npm指令有啥区别?","slug":"node跟npm指令有啥区别","link":"#node跟npm指令有啥区别","children":[]},{"level":2,"title":"Anaconda 简介","slug":"anaconda-简介","link":"#anaconda-简介","children":[]},{"level":2,"title":"DDoS 攻击：分布式拒绝服务攻击","slug":"ddos-攻击-分布式拒绝服务攻击","link":"#ddos-攻击-分布式拒绝服务攻击","children":[{"level":3,"title":"攻击方式","slug":"攻击方式","link":"#攻击方式","children":[]},{"level":3,"title":"防御措施","slug":"防御措施","link":"#防御措施","children":[]}]}],"git":{"updatedTime":1748329949000,"contributors":[{"name":"“root”","username":"","email":"1787536379@qq.com","commits":1}],"changelog":[{"hash":"5060321abaa67e9154b1456a9d36705be88f8f8e","time":1748329949000,"email":"1787536379@qq.com","author":"“root”","message":"add 学习文档"}]},"filePathRelative":"js/tip.md","excerpt":"<h2>电脑用户变量和系统变量那个优先级高?</h2>\\n<p>当涉及到环境变量的解析和使用时，通常用户变量的优先级高于系统变量。</p>\\n<p>这意味着如果一个用户变量和一个系统变量具有相同的名称，那么在该用户的上下文中，用户变量的值将被优先使用。</p>\\n<h2>node跟npm指令有啥区别?</h2>\\n<p>node：用于运行 JavaScript 代码，是 Node.js 的执行环境。</p>\\n<p>npm：用于管理 Node.js 项目的依赖和包，是 Node.js 的包管理器。</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>Hykari对sharingspares比druid更适配</p>\\n</div>"}');export{r as comp,p as data};
